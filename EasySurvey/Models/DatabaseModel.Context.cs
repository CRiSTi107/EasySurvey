//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EasySurvey.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;

    public partial class DatabaseEntity : DbContext
    {
        public DatabaseEntity()
            : base("name=DatabaseConnectionString")
        {
        }

        public virtual DbSet<Attitude> Attitude { get; set; }
        public virtual DbSet<AttitudeDefinition> AttitudeDefinition { get; set; }
        public virtual DbSet<Question> Question { get; set; }
        public virtual DbSet<Role> Role { get; set; }
        public virtual DbSet<Survey> Survey { get; set; }
        public virtual DbSet<SurveyDefinition> SurveyDefinition { get; set; }
        public virtual DbSet<User> User { get; set; }
        public virtual DbSet<UserRole> UserRole { get; set; }
        public virtual DbSet<ResultDefinition> ResultDefinition { get; set; }
        public virtual DbSet<Result> Result { get; set; }

        public void Close()
        {
            base.Dispose(true);
            this.Dispose();
        }

        public override int SaveChanges()
        {
            int ReturnCode = base.SaveChanges();

            // Save backup
            EasySurvey.Database DB = new EasySurvey.Database();
            DB.Backup(EasySurvey.Database.BackupReason.Automatic);

            return ReturnCode;
        }

        // https://stackoverflow.com/questions/12532729/sqlite-keeps-the-database-locked-even-after-the-connection-is-closed
        ~DatabaseEntity()
        {
            // base.Database.Connection.Close();
            // if (base.Database.Connection.State == System.Data.ConnectionState.Open)
            //     base.Dispose(true);
        }
    }
}
